#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üîç RELAT√ìRIO DE UNIFICA√á√ÉO DAS ASSINATURAS
=========================================

PROBLEMA IDENTIFICADO:
- Havia 3 implementa√ß√µes diferentes do sistema de assinaturas
- Cada uma com CSS diferente para espa√ßamento
- Resultava em layouts inconsistentes

IMPLEMENTA√á√ïES ENCONTRADAS:
1. declaracao_saude.py (linha ~1520)
2. services/pdf.py (linha ~200) 
3. ficha_paciente.py (linha ~8600)

SOLU√á√ÉO APLICADA:
- Padronizei TODAS as implementa√ß√µes para usar:
  * margin: -15px 0 0 0 (espa√ßamento compacto)
  * line-height: 0.8 (linhas mais pr√≥ximas)
  * Mesmo structure HTML

RESULTADO:
‚úÖ Sistema unificado em todas as partes
‚úÖ Espa√ßamento consistente entre assinatura e nome
‚úÖ Pol√≠tica de n√£o redund√¢ncia aplicada

ARQUIVOS CORRIGIDOS:
"""

import os

def verificar_implementacoes():
    """Verifica se todas as implementa√ß√µes est√£o padronizadas"""
    
    arquivos_alvo = [
        "ficha_paciente/declaracao_saude.py",
        "services/pdf.py", 
        "ficha_paciente.py"
    ]
    
    padrao_esperado = "margin: -15px 0 0 0; line-height: 0.8;"
    
    print("üîç VERIFICA√á√ÉO DE PADRONIZA√á√ÉO:")
    print("=" * 50)
    
    for arquivo in arquivos_alvo:
        caminho = os.path.join(os.path.dirname(__file__), arquivo)
        if os.path.exists(caminho):
            with open(caminho, 'r', encoding='utf-8') as f:
                conteudo = f.read()
                
            if padrao_esperado in conteudo:
                print(f"‚úÖ {arquivo}: PADRONIZADO")
            else:
                print(f"‚ùå {arquivo}: PRECISA CORRE√á√ÉO")
        else:
            print(f"‚ö†Ô∏è  {arquivo}: N√ÉO ENCONTRADO")
    
    print("\nüéØ PR√ìXIMOS PASSOS:")
    print("1. Gerar novo PDF para testar")
    print("2. Verificar espa√ßamento compacto")
    print("3. Confirmar centraliza√ß√£o correta")

if __name__ == "__main__":
    verificar_implementacoes()
